name: Build and Push Docker Image

on:
  push:
    branches:
      - '**'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: |
          cd app
          npm ci

      - name: Install SOPS
        run: |
          sudo apt-get update && sudo apt-get install -y wget gnupg
          wget https://github.com/getsops/sops/releases/download/v3.8.1/sops-v3.8.1.linux.amd64 -O /usr/local/bin/sops
          chmod +x /usr/local/bin/sops

      - name: Import GPG Private Key
        run: |
          mkdir -p ~/.gnupg
          chmod 700 ~/.gnupg
          echo "allow-loopback-pinentry" >> ~/.gnupg/gpg-agent.conf
          echo "pinentry-mode loopback" >> ~/.gnupg/gpg.conf
          echo "$GPG_PRIVATE_KEY_QA" | base64 -d > private-key.asc
          gpg --batch --yes --pinentry-mode loopback --import private-key.asc
          gpg --with-colons --fingerprint | awk -F: '/^fpr:/ {print $10 ":6:"}' | gpg --import-ownertrust
        env:
          GPG_PRIVATE_KEY_QA: ${{ secrets.GPG_PRIVATE_KEY_QA }}

      - name: Decrypt .env.enc
        run: |
          sops --input-type dotenv --output-type dotenv --decrypt app/.env.enc > app/.env

      - name: Print decrypted .env file (debug only)
        run: cat app/.env

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Docker image
        run: |
          docker build --platform linux/amd64 -t ${{ secrets.DOCKERHUB_USERNAME }}/app-demo:${{ github.sha }} -t ${{ secrets.DOCKERHUB_USERNAME }}/app-demo:latest ./app

      - name: Push Docker image
        run: |
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/app-demo:${{ github.sha }}
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/app-demo:latest 